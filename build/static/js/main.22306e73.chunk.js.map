{"version":3,"sources":["constants.js","scene.js","components/Input.js","App.js","serviceWorker.js","index.js"],"names":["TX","TY","TZ","numbers","require","RADIAN","Math","PI","UNIT_MATRIX","copy","array","JSON","parse","stringify","normalize","point","Scene","this","g","0","t","1","2","3","transformSteck","transformMatrix","basePoints","lines","splines","surfaces","backupPoints","sweep","apply","scale","centerRegion","x","y","value","axis","tansferMatrix","C","Error","push","scaleMatrix","a","cos","sin","shiftMatrix","focusMatix","canvas","document","getElementById","points","xMin","xMax","yMin","yMax","i","length","regionWidth","abs","regionHeight","screenWidth","width","screenHeight","height","screen","text","scene","console","log","getContext","context","setTransform","clearRect","translate","strokeStyle","line","point1","matrix","multiply","multiplyMatrix","point2","beginPath","moveTo","lineTo","closePath","stroke","splinePoints","spline","p","contolPoint","subTerm","scalar","addition","s","surface","surfacePoints","u","v","j","controlPoint","Input","plusBtn","React","createRef","minusBtn","textField","className","props","label","name","ref","icon","current","addEventListener","event","option","target","attributes","onClick","onChange","Component","App","state","transfer","rotate","shift","focus","uploadBtn","drawBtn","sweepBtn","defaultBtn","pressDraw","bind","pressSweep","pressDefault","pressOpenFile","pressScale","pressShift","pressFocus","pressTransfer","pressRotate","changeFocus","changeRotate","changeScale","changeShift","changeTrasfer","draw","setSweep","setDefault","forms","elements","files","then","uploadScene","addTransferMatrix","addScaleMatrix","addRotateMatrix","addShiftMatix","addFocusMatrix","setState","Number","drawer","clientWidth","clientHeight","id","Card","raised","CardContent","style","padding","type","required","Typography","variant","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22306e73.chunk.js","sourcesContent":["export default {\n    TX: 'x',\n    TY: 'y',\n    TZ: 'z',\n};","import C from './constants';\n\nconst numbers = require('numbers');\n\nconst RADIAN = Math.PI / 180;\n\n// еденичная матрица\nconst UNIT_MATRIX = [\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1]\n];\n\n// функция копирования массива\nconst copy = array => {\n    return JSON.parse(JSON.stringify(array));\n};\n\n// функция нормализации\nconst normalize = point => {\n    return copy([point[0] / point[3], point[1] / point[3], point[2] / point[3], point[3] / point[3]]);\n};\n\nexport default class Scene {\n\n    // конструктор класса\n    constructor() {\n\n        // \"подкласс\" (объект с методами по факту) для вычисления базиса Бола\n        this.g = {\n            0: (t) => {\n                return (1 - t) * (1 - t);\n            },\n            1: (t) => {\n                return 2 * t * (1 - t) * (1 - t);\n            },\n            2: (t) => {\n                return 2 * (1 - t) * t *t;\n            },\n            3: (t) => {\n                return t * t;\n            }\n        };\n\n        // массив преобразований\n        this.transformSteck = [copy(UNIT_MATRIX)];\n\n        // конечная матрица преобразования\n        this.transformMatrix = copy(UNIT_MATRIX);\n\n        // базовые объеты сцены сцены\n        this.basePoints = [];\n        this.lines = [];\n        this.splines = [];\n        this.surfaces = [];\n\n        // backup сцены\n        this.backupPoints = [];\n\n        // настройки для вписания в экран\n        this.sweep = {\n            apply: false,\n            scale: 1,\n            centerRegion: {\n                x: 0,\n                y: 0\n            }\n        };\n\n    }\n\n    // public метод: добавление матрицы сдвига в стек преоразований\n    addTransferMatrix(value, axis) {\n\n        const tansferMatrix = copy(UNIT_MATRIX);\n\n        switch (axis) {\n            case C.TX:\n                tansferMatrix[3][0] = value;\n                break;\n            case C.TY:\n                tansferMatrix[3][1] = value;\n                break;\n            case C.TZ:\n                tansferMatrix[3][2] = value;\n                break;\n            default:\n                throw Error(`Unexpected token ${axis}`);\n        }\n        \n        this.transformSteck.push(tansferMatrix);\n    }\n\n    // public метод: добавление матрицы масштаирования в стек преоразований\n    addScaleMatrix(value, axis) {\n\n        const scaleMatrix = copy(UNIT_MATRIX);\n\n        switch (axis) {\n            case C.TX:\n                scaleMatrix[0][0] = value;\n                break;\n            case C.TY:\n                scaleMatrix[1][1] = value;\n                break;\n            case C.TZ:\n                scaleMatrix[2][2] = value;\n                break;\n            default:\n                throw Error(`Unexpected token ${axis}`);\n        }\n\n        this.transformSteck.push(scaleMatrix); \n    }\n\n    // public метод: добавление матрицы поворота в стек преобразований \n    addRotateMatrix(value, axis) {\n        const a = value * RADIAN;\n        switch (axis) {\n            case C.TX:\n                this.transformSteck.push([\n                    [1, 0, 0, 0],\n                    [0, Math.cos(a), Math.sin(a), 0],\n                    [0, -Math.sin(a), Math.cos(a), 0],\n                    [0, 0, 0, 1]\n                ]);\n                break;\n            case C.TY:\n                this.transformSteck.push([\n                    [Math.cos(a), 0, -Math.sin(a), 0],\n                    [0, 1, 0, 0],\n                    [Math.sin(a), 0, Math.cos(a), 0],\n                    [0, 0, 0, 1]\n                ]);\n                break;\n            case C.TZ:\n                this.transformSteck.push([\n                    [Math.cos(a), Math.sin(a), 0, 0],\n                    [-Math.sin(a), Math.cos(a), 0, 0],\n                    [0, 0, 1, 0],\n                    [0, 0, 0, 1]\n                ]);\n                break;\n            default:\n                throw Error(`Unexpected token ${axis}`);\n        }\n    }\n\n    // public метод: добавление матрицы косого сдвига (Х по У) в стек преобразований\n    addShiftMatix(value) {\n\n        const shiftMatrix = copy(UNIT_MATRIX);\n\n        shiftMatrix[1][0] = value;\n        \n        this.transformSteck.push(shiftMatrix);\n    }\n\n    // public метод: добавление матрицы ОПП (по Z) в стек преобразований\n    addFocusMatrix(value) {\n\n        const focusMatix = copy(UNIT_MATRIX);\n\n        focusMatix[2][3] = value === 0 ? 0 : 1 / value;\n\n        this.transformSteck.push(focusMatix);\n    }\n\n    // public метод: возврат в исходное состояние сцены\n    setDefault() {\n        this.transformSteck = [copy(UNIT_MATRIX)];\n\n        this.transformMatrix = copy(UNIT_MATRIX);\n\n        this.sweep = {\n            apply: false,\n            scale: 1,\n            centerRegion: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    // public метод: вычисление настроек для вписывания в экран\n    setSweep() {\n        const canvas = document.getElementById('canvas');\n\n        var points = copy(this.backupPoints);\n        var xMin = points[0][0];\n        var xMax = points[0][0];\n        var yMin = points[0][1];\n        var yMax = points[0][1];\n\n        for(let i = 0; i < points.length; i++) {\n            if(points[i][0] > xMax) {\n                xMax = points[i][0];\n            }\n\n            if(points[i][0] < xMin) {\n                xMin = points[i][0];\n            }\n\n            if(points[i][1] > yMax) {\n                yMax = points[i][1];\n            }\n\n            if(points[i][1] < yMin) {\n                yMin = points[i][1];\n            }\n        }\n\n        var regionWidth = Math.abs(xMax - xMin);\n        var regionHeight = Math.abs(yMax - yMin);\n\n        var screenWidth = canvas.width;\n        var screenHeight = canvas.height;\n\n        var screen = 0;\n\n        if(screenWidth > screenHeight) {\n            screen = screenHeight - 100;\n        } else {\n            screen = screenWidth - 100;\n        }\n    \n        var scale = 1;\n    \n        if(regionWidth > regionHeight) {\n            scale = screen / regionWidth;\n        } else {\n            scale = screen / regionHeight;\n        }\n\n        this.sweep.apply = true;\n        this.sweep.scale = scale;\n        this.sweep.centerRegion = {\n            x: xMin + regionWidth / 2,\n            y: yMin + regionHeight / 2\n        };\n\n        this.transformSteck.push([\n            [scale, 0, 0, 0],\n            [0, scale, 0, 0],\n            [0, 0, scale, 0],\n            [0, 0, 0, 1]\n        ]);\n    }\n\n    // public метод: загрузить сцену\n    uploadScene(text) {\n        const scene = JSON.parse(text);\n\n        if(!scene.points) throw Error('scene invalide');\n\n        this.basePoints = copy(scene.points);\n        this.lines = scene.lines ? copy(scene.lines) : [];\n        this.splines = scene.splines ? copy(scene.splines) : [];\n        this.surfaces = scene.surfaces ? copy(scene.surfaces) : [];\n\n    }\n\n    // public метод: отрисовать сцену\n    draw() {\n        const canvas = document.getElementById('canvas');\n\n        console.log(this.transformSteck);\n\n        if(canvas.getContext) {\n\n            const context = canvas.getContext('2d');\n            var backupPoints = [];\n\n            if(this.sweep.apply) {\n                debugger;\n                context.setTransform(1, 0, 0, 1, 0, 0);\n                context.clearRect(0, 0, canvas.width, canvas.height);\n\n                const scale = this.sweep.scale;\n                const centerRegion = this.sweep.centerRegion;\n\n                context.translate(canvas.width / 2, canvas.height / 2);\n                context.scale(1, -1);\n                context.translate(-centerRegion.x*scale, -centerRegion.y*scale);\n\n            } else {\n                context.setTransform(1, 0, 0, 1, 0, 0);\n                context.clearRect(0, 0, canvas.width, canvas.height);\n\n                context.translate(canvas.width / 2, canvas.height / 2);\n                context.scale(1, -1);\n            }\n\n            context.strokeStyle = 'white';\n\n            for(let i = 0; i < this.lines.length; i++) {\n\n                const line = this.lines[i];\n\n                const point1 = normalize(numbers.matrix.multiply([this.basePoints[line[0]]], this.multiplyMatrix())[0]);\n                const point2 = normalize(numbers.matrix.multiply([this.basePoints[line[1]]], this.multiplyMatrix())[0]);\n\n                context.beginPath();\n                context.moveTo(point1[0], point1[1]);\n                context.lineTo(point2[0], point2[1]);\n                context.closePath();\n                context.stroke();\n\n                backupPoints.push(point1);\n                backupPoints.push(point2);\n\n            }\n\n            for(let i = 0; i < this.splines.length; i++) {\n\n                var splinePoints = [];\n\n                const spline = this.splines[i];\n\n                for(let t = 0; t < 1.025; t += 0.05) {\n\n                    let p = [0, 0, 0, 0];\n\n                    for(let i = 0; i < spline.length; i++) {\n                        const contolPoint = this.basePoints[spline[i]];\n                        const subTerm = numbers.matrix.scalar([contolPoint], this.g[i](t))[0];\n\n                        p = numbers.matrix.addition(p, subTerm);\n                    }\n\n                    const point = normalize(numbers.matrix.multiply([p], this.multiplyMatrix())[0]);\n\n                    splinePoints.push(point);\n                    backupPoints.push(point);\n                }\n\n                context.beginPath();\n                for(let i = 1; i < splinePoints.length; i++) {\n                    context.moveTo(splinePoints[i-1][0], splinePoints[i-1][1]);\n                    context.lineTo(splinePoints[i][0], splinePoints[i][1]);\n                }\n                context.closePath();\n                context.stroke();\n\n            }\n\n            for(let s = 0; s < this.surfaces.length; s++) {\n\n                var surface = this.surfaces[s];\n\n                let surfacePoints = [];\n\n                for(let u = 0; u < 1.025; u += 0.05) {\n                    let line = [];\n\n                    for(let v = 0; v < 1.025; v += 0.05) {\n                        let p = [0, 0, 0, 0];\n\n                        for(let i = 0; i < surface.length; i++) {\n                            for(let j = 0; j < surface[i].length; j++) {\n                                const controlPoint = this.basePoints[surface[i][j]];\n                                const subTerm = numbers.matrix.scalar([controlPoint], this.g[i](u)*this.g[j](v))[0];\n\n                                p = numbers.matrix.addition(p, subTerm); \n                            }\n                        }\n\n                        const point = normalize(numbers.matrix.multiply([p], this.multiplyMatrix())[0]);\n                        line.push(point);\n                        backupPoints.push(point);\n                    }\n\n                    surfacePoints.push(line);\n                }\n\n                for(let i = 0; i < surfacePoints.length; i++) {\n                    context.beginPath();\n                    for(let j = 1; j < surfacePoints[i].length; j++) {\n                        context.moveTo(surfacePoints[i][j-1][0], surfacePoints[i][j-1][1]);\n                        context.lineTo(surfacePoints[i][j][0], surfacePoints[i][j][1]);\n                    }\n                    context.closePath();\n                    context.stroke();\n                }\n\n                for(let i = 0; i < surfacePoints.length; i++) {\n                    context.beginPath();\n                    for(let j = 1; j < surfacePoints[i].length; j++) {\n                        context.moveTo(surfacePoints[j-1][i][0], surfacePoints[j-1][i][1]);\n                        context.lineTo(surfacePoints[j][i][0], surfacePoints[j][i][1]);\n                    }\n                    context.closePath();\n                    context.stroke();\n                }\n\n            }\n\n            this.backupPoints = copy(backupPoints);\n        }\n    }\n\n    // pivate метод: перемножить матрицы стека преобразований\n    multiplyMatrix() {\n        \n        let multiply = this.transformSteck[0];\n\n        for(let i = 1; i < this.transformSteck.length; i++) {\n            multiply = numbers.matrix.multiply(multiply, this.transformSteck[i]);\n        }\n\n        return multiply;\n\n    }\n\n}","import React, { Component } from 'react';\n\nimport './input.css';\n\nimport \"@ui5/webcomponents/dist/Label\";\nimport \"@ui5/webcomponents/dist/Input.js\";\nimport \"@ui5/webcomponents/dist/features/InputSuggestions.js\";\nimport \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\"\nimport \"@ui5/webcomponents-icons/dist/json-imports/Icons.js\"\nimport \"@ui5/webcomponents/dist/Button\";\n\nexport default class Input extends Component {\n\n    constructor() {\n        super();\n\n        // сслыки на элементы\n        this.plusBtn = React.createRef();\n        this.minusBtn = React.createRef();\n        this.textField = React.createRef();\n    }\n\n    render() {\n        return (\n            <div className='input-root'>\n                <ui5-label>{this.props.label}</ui5-label>\n                <ui5-input name={this.props.name} ref={this.textField} />\n                <ui5-button icon=\"add\" name={this.props.name} ref={this.plusBtn}></ui5-button>\n                <ui5-button icon=\"less\" name={this.props.name} ref={this.minusBtn}></ui5-button>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n\n        this.plusBtn.current.addEventListener('click', event => {\n            const option = event.target.attributes['icon'].value;\n            this.props.onClick(this.props.name, option);\n        });\n\n        this.minusBtn.current.addEventListener('click', event => {\n            const option = event.target.attributes['icon'].value;\n            this.props.onClick(this.props.name, option);\n        });\n\n        this.textField.current.addEventListener('change', event => {\n            this.props.onChange(this.props.name, event.target.value);\n        });\n\n    }\n}\n","import React, { Component } from 'react';\nimport C from './constants';\nimport './App.css';\nimport Scene from './scene';\n\nimport Input from './components/Input';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport \"@ui5/webcomponents/dist/Button\";\nimport \"@ui5/webcomponents/dist/Card\";\n\nexport default class App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      scene: new Scene(),\n      transfer: { \n        [C.TX]: 0, \n        [C.TY]: 0, \n        [C.TZ]: 0 \n      },\n      scale: {\n        [C.TX]: 1, \n        [C.TY]: 1, \n        [C.TZ]: 1 \n      },\n      rotate: {\n        [C.TX]: 0, \n        [C.TY]: 0, \n        [C.TZ]: 0 \n      },\n      shift: 0,\n      focus: 0\n    };\n\n    // ссылки на элементы\n    this.uploadBtn = React.createRef();\n    this.drawBtn = React.createRef();\n    this.sweepBtn = React.createRef();\n    this.defaultBtn = React.createRef();\n\n    // биндинг хандлеров\n    this.pressDraw = this.pressDraw.bind(this);\n    this.pressSweep = this.pressSweep.bind(this);\n    this.pressDefault = this.pressDefault.bind(this);\n    this.pressOpenFile = this.pressOpenFile.bind(this);\n    this.pressScale = this.pressScale.bind(this);\n    this.pressShift = this.pressShift.bind(this);\n    this.pressFocus = this.pressFocus.bind(this);\n    this.pressTransfer = this.pressTransfer.bind(this);\n    this.pressRotate = this.pressRotate.bind(this);\n    this.changeFocus = this.changeFocus.bind(this);\n    this.changeRotate = this.changeRotate.bind(this);\n    this.changeScale = this.changeScale.bind(this);\n    this.changeShift = this.changeShift.bind(this);\n    this.changeTrasfer = this.changeTrasfer.bind(this);\n\n  }\n\n  // press draw\n  pressDraw() {\n    this.state.scene.draw();\n  }\n\n  // press sweep\n  pressSweep() {\n    this.state.scene.setSweep();\n  }\n\n  // press default\n  pressDefault() {\n    this.state.scene.setDefault();\n  }\n\n  // press open file\n  pressOpenFile() {\n    document\n      .forms['uploadForm']\n      .elements['uploadInput']\n      .files[0]\n      .text()\n      .then(text => {\n        this.state.scene.uploadScene(text);\n      });\n  }\n\n  /*Хандлеры матриц преобразования*/\n\n  // press transfer\n  pressTransfer(name, option) {\n\n    const value = option === 'add' ? this.state.transfer[name] : -this.state.transfer[name];\n\n    this.state.scene.addTransferMatrix(\n      value,\n      name\n    );\n    this.state.scene.draw();\n  }\n\n  // press scale\n  pressScale(name, option) {\n\n    const value = option === 'add' ? this.state.scale[name] : 1 / this.state.scale[name];\n\n    this.state.scene.addScaleMatrix(\n      value,\n      name\n    );\n    this.state.scene.draw();\n  }\n\n  // press rotate\n  pressRotate(name, option) {\n\n    const value = option === 'add' ? this.state.rotate[name] : -this.state.rotate[name];\n\n    this.state.scene.addRotateMatrix(\n      value,\n      name\n    );\n    this.state.scene.draw();\n  }\n\n  // press shift\n  pressShift(name, option) {\n\n    const value = option === 'add' ? this.state.shift : -this.state.shift;\n\n    this.state.scene.addShiftMatix(value);\n    this.state.scene.draw();\n  }\n\n  // press focus\n  pressFocus(name, option) {\n\n    const value = option === 'add' ? this.state.focus : -this.state.focus;\n\n    this.state.scene.addFocusMatrix(value);\n    this.state.scene.draw();\n  }\n\n  // change transfer\n  changeTrasfer(name, value) {\n    this.setState({\n      ...this.state,\n      transfer: {\n        ...this.state.transfer,\n        [name]: Number(value)\n      }\n    });\n  }\n\n\n  // change scale\n  changeScale(name, value) {\n    this.setState({\n      ...this.state,\n      scale: {\n        ...this.state.scale,\n        [name]: Number(value)\n      }\n    });\n  }\n\n  // change rotate\n  changeRotate(name, value) {\n    this.setState({\n      ...this.state,\n      rotate: {\n        ...this.state.rotate,\n        [name]: Number(value)\n      }\n    });\n  }\n\n  // change shift\n  changeShift(name, value) {\n    this.setState({\n      ...this.state,\n      shift: Number(value)\n    });\n  }\n\n  // change focus\n  changeFocus(name, value) {\n    this.setState({\n      ...this.state,\n      focus: Number(value)\n    });\n  }\n\n  componentDidMount() {\n\n    const canvas = document.getElementById('canvas');\n    const drawer = document.getElementById('drawer');\n\n    canvas.width = drawer.clientWidth;\n    canvas.height = drawer.clientHeight;\n\n    this.uploadBtn.current.addEventListener('click', event => {\n      this.pressOpenFile(event);\n    });\n    this.drawBtn.current.addEventListener('click', event => {\n      this.pressDraw(event);\n    });\n    this.sweepBtn.current.addEventListener('click', event => {\n      this.pressSweep(event);\n    });\n    this.defaultBtn.current.addEventListener('click', event => {\n      this.pressDefault(event);\n    });\n\n  }\n\n  render() {\n    return (\n      <main id='app'>\n        <div id='header'>\n          <Card className='head-group' raised>\n            <CardContent className='content' style={{padding: '5px'}}>\n              <div>\n                <ui5-button ref={this.drawBtn}>Отрисовать</ui5-button>\n                <ui5-button ref={this.sweepBtn}>Вписать в экран</ui5-button>\n                <ui5-button ref={this.defaultBtn}>Исходное состояние</ui5-button>\n                <ui5-button ref={this.uploadBtn}>Загрузить сцену</ui5-button>\n              </div>\n              <form id='uploadForm'>\n                <input id='uploadInput' type='file' required />\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n        <div id='drawer'>\n          <canvas id='canvas' width='0' height='0' />\n        </div>\n        <div id='functions'>\n          <Card className='func-group' raised>\n            <CardContent style={{padding: '5px'}}>\n              <Typography variant='overline'>Перенос</Typography>\n              <Input name={C.TX} label=\"ось Х\" onClick={this.pressTransfer} onChange={this.changeTrasfer} />\n              <Input name={C.TY} label=\"ось Y\" onClick={this.pressTransfer} onChange={this.changeTrasfer} />\n              <Input name={C.TZ} label=\"ось Z\" onClick={this.pressTransfer} onChange={this.changeTrasfer} />\n            </CardContent>\n          </Card>\n          <Card className='func-group' raised>\n            <CardContent style={{padding: '5px'}}>\n              <Typography variant='overline'>Поворот</Typography>\n              <Input name={C.TX} label=\"ось Х\" onClick={this.pressRotate} onChange={this.changeRotate} />\n              <Input name={C.TY} label=\"ось Y\" onClick={this.pressRotate} onChange={this.changeRotate} />\n              <Input name={C.TZ} label=\"ось Z\" onClick={this.pressRotate} onChange={this.changeRotate} />\n            </CardContent>\n          </Card>\n          <Card className='func-group' raised>\n            <CardContent style={{padding: '5px'}}>\n              <Typography variant='overline'>Масштаб</Typography>\n              <Input name={C.TX} label=\"ось Х\" onClick={this.pressScale} onChange={this.changeScale} />\n              <Input name={C.TY} label=\"ось Y\" onClick={this.pressScale} onChange={this.changeScale} />\n              <Input name={C.TZ} label=\"ось Z\" onClick={this.pressScale} onChange={this.changeScale} />\n            </CardContent>\n          </Card>\n          <Card className='func-group' raised>\n            <CardContent style={{padding: '5px'}}>\n              <Typography variant='overline'>Сдвиг</Typography>\n              <Input name={C.TX} label=\"ось Х\" onClick={this.pressShift} onChange={this.changeShift} />\n            </CardContent>\n          </Card>\n          <Card className='func-group' raised>\n            <CardContent style={{padding: '5px'}}>\n              <Typography variant='overline'>ОПП</Typography>\n              <Input name={C.TX} label=\"ось Х\" onClick={this.pressFocus} onChange={this.changeFocus} />\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}